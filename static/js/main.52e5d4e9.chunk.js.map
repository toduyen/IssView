{"version":3,"sources":["Components/Map.js","Hook/CallApiIss.js","App.js","reportWebVitals.js","index.js"],"names":["withScriptjs","withGoogleMap","latw","lonw","defaultZoom","defaultCenter","lat","lng","icon","url","scaledSize","window","google","maps","Size","position","CallApiIss","initialUrl","initialData","useState","Data","setData","Url","setUrl","Loading","setLoading","Error","setError","useEffect","setInterval","a","axios","dataview","data","App","className","latitude","longitude","name","velocity","googleMapURL","loadingElement","style","height","containerElement","margin","border","mapElement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAsBeA,yBAAaC,yBAnBhB,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAOC,EAAU,EAAVA,KACnB,OACE,8BACA,cAAC,YAAD,CACMC,YAAa,EACbC,cAAe,CAAEC,IAAK,UAAWC,IAAK,WAF5C,SAIK,cAAC,SAAD,CACKC,KAAM,CACJC,IAAK,wDACLC,WAAY,IAAIC,OAAOC,OAAOC,KAAKC,KAAK,GAAI,KAE9CC,SAAU,CAAGT,IAAKJ,EAAMK,IAAKJ,a,4CCQ5Ba,EArBI,SAACC,EAAaC,GAAiB,IAAD,EACrBC,mBAASD,GADY,mBACtCE,EADsC,KAChCC,EADgC,OAEvBF,mBAASF,GAFc,mBAEtCK,EAFsC,KAEjCC,EAFiC,OAGfJ,oBAAS,GAHM,mBAGtCK,EAHsC,KAG7BC,EAH6B,OAInBN,oBAAS,GAJU,mBAItCO,EAJsC,KAI/BC,EAJ+B,KAmB7C,OAdAC,qBAAU,WAYPC,YAXa,uCAAG,4BAAAC,EAAA,6DACZL,GAAW,GACXE,GAAS,GAFG,kBAIeI,IAAMT,GAJrB,OAIFU,EAJE,OAKRX,EAAQW,EAASC,MALT,gDAORN,GAAS,GAPD,QASZF,GAAW,GATC,yDAAH,qDAWQ,OACrB,CAACH,IACG,CAAC,CAACF,OAAOI,UAAUE,SAAOH,ICKtBW,MAvBf,WAAgB,IAAD,EAC6BlB,EAAW,kDADxC,0BACLI,EADK,EACLA,KAAOI,EADF,EACEA,QAEf,OAHa,EACYE,MADZ,KAIX,sBAAKS,UAAU,MAAf,UACM,iCACG,gCACC,qEAAsBX,EAAU,IAAH,OAASJ,QAAT,IAASA,OAAT,EAASA,EAAMgB,SAA5C,MAAyDZ,EAAU,IAAH,OAASJ,QAAT,IAASA,OAAT,EAASA,EAAMiB,aADhF,iBAEC,2EAA4Bb,EAAU,IAAH,OAASJ,QAAT,IAASA,OAAT,EAASA,EAAMkB,QAFnD,gBAGC,gEAAmBd,EAAU,IAAH,OAASJ,QAAT,IAASA,OAAT,EAASA,EAAMmB,SAAzC,kBAEJ,cAAC,EAAD,CACEC,aAAY,sDAVV,0CAUU,qBACZC,eAAgB,qBAAKC,MAAO,CAAEC,OAAO,UACrCC,iBAAkB,qBAAKF,MAAO,CAAEC,OAAO,OAASE,OAAO,OAASC,OAAQ,qBACxEC,WAAY,qBAAKL,MAAO,CAAEC,OAAO,UACjCzC,KAAI,OAAEkB,QAAF,IAAEA,OAAF,EAAEA,EAAMgB,SACZjC,KAAI,OAAEiB,QAAF,IAAEA,OAAF,EAAEA,EAAMiB,gBCRTW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.52e5d4e9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { withGoogleMap, withScriptjs, GoogleMap  , Marker} from \"react-google-maps\"\r\n\r\nconst Map = ({latw , lonw}) => {\r\n  return (\r\n    <div>\r\n    <GoogleMap\r\n          defaultZoom={3}\r\n          defaultCenter={{ lat: 21.027763, lng: 105.834160 }}\r\n        >\r\n         <Marker\r\n              icon={{\r\n                url: 'https://static.thenounproject.com/png/2405810-200.png',\r\n                scaledSize: new window.google.maps.Size(40, 40),\r\n              }}\r\n              position={{  lat: latw, lng: lonw }}\r\n          />\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withScriptjs(withGoogleMap(Map));","import axios from 'axios';\r\nimport React, { useEffect , useState } from 'react';\r\nconst CallApiIss = (initialUrl , initialData) => {\r\n    const [Data, setData] = useState(initialData);\r\n    const [Url, setUrl] = useState(initialUrl);\r\n    const [Loading, setLoading] = useState(false);\r\n    const [Error, setError] = useState(false);\r\n    useEffect(() => {\r\n       const getData = async () => {\r\n           setLoading(true);\r\n           setError(false);\r\n           try {\r\n               const dataview = await axios(Url);\r\n               setData(dataview.data);\r\n           } catch{\r\n               setError(true);\r\n           }\r\n           setLoading(false);\r\n       }\r\n       setInterval(getData, 2000);\r\n    }, [Url])\r\n    return [{Data , Loading , Error},setUrl];\r\n}\r\nexport default CallApiIss;","import './App.css';\nimport Map from './Components/Map';\nimport CallApiIss from './Hook/CallApiIss';\nfunction App() {\n  const [{Data , Loading , Error},setUrl] = CallApiIss('https://api.wheretheiss.at/v1/satellites/25544');\n  const key = 'AIzaSyAginVE2S49v6C42Lbijbtq_jP0hXOprfc'\n  return (\n    <div className=\"App\">\n          <header>\n            {<div>\n              <span> Tọa độ Bay: {Loading ? \"_\" : Data?.latitude} - {Loading ? \"_\" : Data?.longitude}</span> *************\n              <span> Tên trạm vũ trụ: {Loading ? \"_\" : Data?.name}</span>*************\n              <span> Vận tốc: {Loading ? \"_\" : Data?.velocity} (km/h)</span></div>}\n          </header>\n          <Map \n            googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${key}&callback=initMap`}\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={<div style={{ height: `90vh`, margin: `auto`, border: '2px solid black' }} />}\n            mapElement={<div style={{ height: `100%` }} />}\n            latw={Data?.latitude}\n            lonw={Data?.longitude}\n          />\n       </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}